<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shouzhi.mapper.SysUserRoleMapper">
  <resultMap id="BaseResultMap" type="com.shouzhi.pojo.db.SysUserRole">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="sys_user_id" jdbcType="VARCHAR" property="sysUserId" />
    <result column="sys_role_id" jdbcType="VARCHAR" property="sysRoleId" />
    <result column="create_id" jdbcType="VARCHAR" property="createId" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>

  <!--RolePermission的ResultMap-->
  <resultMap id="RolePermissionResultMap" type="com.shouzhi.pojo.db.SysRole">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
    <result column="role_desc" jdbcType="VARCHAR" property="roleDesc" />
    <result column="is_locked" jdbcType="CHAR" property="isLocked" />
    <result column="create_id" jdbcType="VARCHAR" property="createId" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="is_delete" jdbcType="CHAR" property="isDelete" />
    <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime" />
    <collection property="sysPermissions" column="id" select="com.shouzhi.mapper.SysRolePermissionMapper.selectPermissionsByRoleId" ofType="com.shouzhi.pojo.db.SysPermission"></collection>
  </resultMap>

  <!--Role的ResultMap-->
  <resultMap id="RoleResultMap" type="com.shouzhi.pojo.db.SysRole">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
    <result column="role_desc" jdbcType="VARCHAR" property="roleDesc" />
    <result column="is_locked" jdbcType="CHAR" property="isLocked" />
    <result column="create_id" jdbcType="VARCHAR" property="createId" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="is_delete" jdbcType="CHAR" property="isDelete" />
    <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime" />
  </resultMap>


  <sql id="Base_Column_List">
    id, sys_user_id, sys_role_id, create_id, create_by, create_time, remark
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wr_sys_user_role
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="selectRolesPermissionsByUserId" parameterType="java.lang.String" resultMap="RolePermissionResultMap">
    SELECT wsr.* FROM wr_sys_user_role wsur
    LEFT JOIN wr_sys_role wsr ON wsur.sys_role_id = wsr.id AND wsr.is_delete='0'
    WHERE wsur.sys_user_id =  #{id,jdbcType=VARCHAR}
  </select>

  <select id="selectRolesByUserId" parameterType="java.lang.String" resultMap="RoleResultMap">
    SELECT wsr.* FROM wr_sys_user_role wsur
    LEFT JOIN wr_sys_role wsr ON wsur.sys_role_id = wsr.id AND wsr.is_delete='0'
    WHERE wsur.sys_user_id =  #{id,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from wr_sys_user_role
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteBySysUserId" parameterType="java.lang.String">
    delete from wr_sys_user_role
    where sys_user_id = #{sysUserId,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteBySysRoleId" parameterType="java.lang.String">
    delete from wr_sys_user_role
    where sys_role_id = #{sysRoleId,jdbcType=VARCHAR}
  </delete>

  <!-- 这里的删除没有用一个结构体去动态参数拼接的原因是删除这个操作很危险，经测试在没有传任何参数的情况下，会直接执行 delete from wr_sys_user_role，并不会报错 -->
  <delete id="deleteBySysUserAndRoleId" parameterType="com.shouzhi.pojo.db.SysUserRole">
    delete from wr_sys_user_role
    where sys_user_id = #{sysUserId,jdbcType=VARCHAR} and sys_role_id = #{sysRoleId,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.shouzhi.pojo.db.SysUserRole">
    insert into wr_sys_user_role (id, sys_user_id, sys_role_id, 
      create_id, create_by, create_time, 
      remark)
    values (#{id,jdbcType=VARCHAR}, #{sysUserId,jdbcType=VARCHAR}, #{sysRoleId,jdbcType=VARCHAR}, 
      #{createId,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.shouzhi.pojo.db.SysUserRole">
    insert into wr_sys_user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sysUserId != null">
        sys_user_id,
      </if>
      <if test="sysRoleId != null">
        sys_role_id,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="sysUserId != null">
        #{sysUserId,jdbcType=VARCHAR},
      </if>
      <if test="sysRoleId != null">
        #{sysRoleId,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.shouzhi.pojo.db.SysUserRole">
    update wr_sys_user_role
    <set>
      <if test="sysUserId != null">
        sys_user_id = #{sysUserId,jdbcType=VARCHAR},
      </if>
      <if test="sysRoleId != null">
        sys_role_id = #{sysRoleId,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.shouzhi.pojo.db.SysUserRole">
    update wr_sys_user_role
    set sys_user_id = #{sysUserId,jdbcType=VARCHAR},
      sys_role_id = #{sysRoleId,jdbcType=VARCHAR},
      create_id = #{createId,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <!--批量插入-->
  <insert id="batchInsert" parameterType="java.util.List" >
    insert into wr_sys_user_role (id, sys_user_id, sys_role_id,
    create_id, create_by,
    remark)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (
      #{item.id,jdbcType=VARCHAR}, #{item.sysUserId,jdbcType=VARCHAR}, #{item.sysRoleId,jdbcType=VARCHAR},
      #{item.createId,jdbcType=VARCHAR}, #{item.createBy,jdbcType=VARCHAR},
      #{item.remark,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>

  <!--批量删除-->
  <delete id="batchDeleteBySysUserId" parameterType="java.util.List" >
    delete from wr_sys_user_role
    where sys_user_id IN
    <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
      #{item,jdbcType=VARCHAR}
    </foreach>
  </delete>

  <!--批量删除-->
  <delete id="batchDeleteBySysUserIdAndRoleId" parameterType="java.util.Map" >
    delete from wr_sys_user_role
    where sys_role_id = #{sysRoleId,jdbcType=VARCHAR} and sys_user_id IN
    <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
      #{item,jdbcType=VARCHAR}
    </foreach>
  </delete>




  <!--批量删除 此操作很危险，不允许where后携带1=1，一旦参数未传将会删除整张表数据-->
  <delete id="batchDelete" parameterType="java.util.Map" >
    delete from wr_sys_user_role
    where
    <if test="idIn != null">
      id IN
      <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
        #{item,jdbcType=VARCHAR}
      </foreach>
    </if>

    <if test="sysUserIdIn != null">
      sys_user_id IN
      <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
        #{item,jdbcType=VARCHAR}
      </foreach>
    </if>

    <if test="sysUserIdEq != null">
      sys_user_id = #{sysUserIdEq,jdbcType=VARCHAR}
    </if>

    <if test="sysRoleIdEq != null">
      sys_role_id = #{sysRoleIdEq,jdbcType=VARCHAR}
    </if>

    <if test="sysUserIdAndRoleIdEq != null">
      sys_user_id = #{sysUserId,jdbcType=VARCHAR} and sys_role_id = #{sysRoleId,jdbcType=VARCHAR}
    </if>

    <if test="sysRoleIdEqAndUserIdIn != null">
      sys_role_id = #{sysRoleId,jdbcType=VARCHAR} and sys_user_id IN
      <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
        #{item,jdbcType=VARCHAR}
      </foreach>
    </if>
  </delete>

  <!--批量查询 -->
  <select id="BatchSelect" parameterType="java.util.Map" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from wr_sys_user_role
    where
    <if test="idIn != null">
      id IN
      <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
        #{item,jdbcType=VARCHAR}
      </foreach>
    </if>

    <if test="sysUserIdIn != null">
      sys_user_id IN
      <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
        #{item,jdbcType=VARCHAR}
      </foreach>
    </if>

    <if test="sysUserIdEq != null">
      sys_user_id = #{sysUserIdEq,jdbcType=VARCHAR}
    </if>

    <if test="sysRoleIdEq != null">
      sys_role_id = #{sysRoleIdEq,jdbcType=VARCHAR}
    </if>

    <if test="sysUserIdAndRoleIdEq != null">
      sys_user_id = #{sysUserId,jdbcType=VARCHAR} and sys_role_id = #{sysRoleId,jdbcType=VARCHAR}
    </if>

    <if test="sysRoleIdEqAndUserIdIn != null">
      sys_role_id = #{sysRoleId,jdbcType=VARCHAR} and sys_user_id IN
      <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
        #{item,jdbcType=VARCHAR}
      </foreach>
    </if>
  </select>

</mapper>