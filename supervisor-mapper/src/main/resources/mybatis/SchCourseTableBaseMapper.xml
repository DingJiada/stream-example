<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shouzhi.mapper.SchCourseTableBaseMapper">
  <resultMap id="BaseResultMap" type="com.shouzhi.pojo.db.SchCourseTableBase">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="course_code" jdbcType="VARCHAR" property="courseCode" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="course_type" jdbcType="CHAR" property="courseType" />
    <result column="people_num" jdbcType="INTEGER" property="peopleNum" />
    <result column="section_num" jdbcType="VARCHAR" property="sectionNum" />
    <result column="section_num_v" jdbcType="VARCHAR" property="sectionNumV" />
    <result column="start_time" jdbcType="TIME" property="startTime" />
    <result column="end_time" jdbcType="TIME" property="endTime" />
    <result column="week" jdbcType="INTEGER" property="week" />
    <result column="week_v" jdbcType="VARCHAR" property="weekV" />
    <result column="weeks" jdbcType="VARCHAR" property="weeks" />
    <result column="weeks_v" jdbcType="VARCHAR" property="weeksV" />
    <result column="is_join_live" jdbcType="CHAR" property="isJoinLive" />
    <result column="join_live_weeks" jdbcType="VARCHAR" property="joinLiveWeeks" />
    <result column="is_joined_live_all" jdbcType="CHAR" property="isJoinedLiveAll" />
    <result column="sys_user_id" jdbcType="VARCHAR" property="sysUserId" />
    <result column="sch_space_id" jdbcType="VARCHAR" property="schSpaceId" />
    <result column="sch_course_category_id" jdbcType="VARCHAR" property="schCourseCategoryId" />
    <result column="sys_department_id" jdbcType="VARCHAR" property="sysDepartmentId" />
    <result column="create_id" jdbcType="VARCHAR" property="createId" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_way" jdbcType="VARCHAR" property="createWay" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="is_delete" jdbcType="CHAR" property="isDelete" />
    <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime" />

    <result column="sys_person_name" jdbcType="VARCHAR" property="sysPersonName" />
    <result column="sys_dep_name" jdbcType="VARCHAR" property="sysDepName" />
    <result column="sch_space_name" jdbcType="VARCHAR" property="schSpaceName" />
    <result column="sch_category_name" jdbcType="VARCHAR" property="schCategoryName" />
    <result column="sch_class_names" jdbcType="VARCHAR" property="schClassNames" />
    <result column="sch_device_flv_get_urls" jdbcType="VARCHAR" property="schDeviceFlvOverlay" />
  </resultMap>

  <sql id="Base_Column_List">
    id, course_code, course_name, course_type, people_num, section_num, section_num_v, start_time, end_time,
    week, week_v, weeks, weeks_v, is_join_live, join_live_weeks, is_joined_live_all, sys_user_id, sch_space_id, sch_course_category_id,
    sys_department_id, create_id, create_by, create_way, create_time, remark, is_delete, 
    delete_time
  </sql>

  <sql id="Alias_Column_List">
    wsctb.id, wsctb.course_code, wsctb.course_name, wsctb.course_type, wsctb.people_num, wsctb.section_num, wsctb.section_num_v, wsctb.start_time, wsctb.end_time,
    wsctb.week, wsctb.week_v, wsctb.weeks, wsctb.weeks_v, wsctb.is_join_live, wsctb.join_live_weeks, wsctb.is_joined_live_all, wsctb.sys_user_id, wsctb.sch_space_id, wsctb.sch_course_category_id,
    wsctb.sys_department_id, wsctb.create_id, wsctb.create_by, wsctb.create_way, wsctb.create_time, wsctb.remark, wsctb.is_delete,
    wsctb.delete_time
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wr_sch_course_table_base
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <!--根据参数查询，返回单个实例-->
  <select id="selectOneByParam" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Alias_Column_List" /> ,
    wsu.person_name sys_person_name,
    wsd.dep_name sys_dep_name,
    CONCAT(wss.parent_space_names,wss.space_name) sch_space_name,
    wscc.category_name sch_category_name,
    GROUP_CONCAT(wsgc.class_name) sch_class_names
    from wr_sch_course_table_base wsctb
    LEFT JOIN wr_sys_user wsu ON wsctb.sys_user_id=wsu.id
    LEFT JOIN wr_sys_department wsd ON wsctb.sys_department_id=wsd.id
    LEFT JOIN wr_sch_space wss ON wsctb.sch_space_id=wss.id
    LEFT JOIN wr_sch_course_category wscc ON wsctb.sch_course_category_id=wscc.id
    LEFT JOIN wr_sch_course_table_base_grade_class wsctbgc ON wsctb.id=wsctbgc.sch_course_table_base_id
    LEFT JOIN wr_sch_grade_class wsgc ON wsctbgc.sch_grade_class_id=wsgc.id
    where wsctb.is_delete='0'
    <if test="id!=null and id!=''">
      AND wsctb.id = #{id,jdbcType=VARCHAR}
    </if>
    GROUP BY wsctb.id
  </select>

  <select id="selectCount" resultType="java.lang.Integer">
    SELECT count(0) FROM wr_sch_course_table_base wsctb WHERE wsctb.is_delete = '0'
  </select>

  <!-- 仅用于前台在线巡课调用，其余地方不可调用！(语句内用MAX的原因是规避报不在GROUP BY子句中的错误，因为wr_sch_device与wr_sch_course_table_base没有直连关系) -->
  <select id="foregroundListByPage" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Alias_Column_List" /> ,
    wsu.person_name sys_person_name,
    wsd.dep_name sys_dep_name,
    CONCAT(wss.parent_space_names,wss.space_name) sch_space_name,
    wscc.category_name sch_category_name,
    GROUP_CONCAT(wsgc.class_name) sch_class_names,
    MAX(CONCAT(wsh.host_protocol,wsh.host_addr,wsh.host_port,wscd.flv_get_url)) sch_device_flv_get_urls
    from wr_sch_course_table_base wsctb
    CROSS JOIN wr_server_host wsh ON wsh.host_type=4
    LEFT JOIN wr_sys_user wsu ON wsctb.sys_user_id=wsu.id
    LEFT JOIN wr_sys_department wsd ON wsctb.sys_department_id=wsd.id
    LEFT JOIN wr_sch_space wss ON wsctb.sch_space_id=wss.id
    LEFT JOIN wr_sch_device wscd ON wss.id=wscd.sch_space_id AND wscd.device_type = 'overlay'
    LEFT JOIN wr_sch_course_category wscc ON wsctb.sch_course_category_id=wscc.id
    LEFT JOIN wr_sch_course_table_base_grade_class wsctbgc ON wsctb.id=wsctbgc.sch_course_table_base_id
    LEFT JOIN wr_sch_grade_class wsgc ON wsctbgc.sch_grade_class_id=wsgc.id
    where wsctb.is_delete='0'
    <if test="courseCodeLike!=null and courseCodeLike!=''">
      AND wsctb.course_code LIKE concat('%',#{courseCodeLike,jdbcType=VARCHAR},'%')
    </if>
    <if test="courseType!=null and courseType!=''">
      AND wsctb.course_type = #{courseType,jdbcType=CHAR}
    </if>
    <if test="sectionNumLike!=null and sectionNumLike!=''">
      AND wsctb.section_num LIKE concat('%',#{sectionNumLike,jdbcType=VARCHAR},'%')
    </if>
    <if test="week!=null and week!=''">
      AND wsctb.week = #{week,jdbcType=INTEGER}
    </if>
    <if test="weeksLike!=null and weeksLike!=''">
      AND wsctb.weeks LIKE concat('%',#{weeksLike,jdbcType=VARCHAR},'%')
    </if>
    <if test="sysUserId!=null and sysUserId!=''">
      AND wsctb.sys_user_id = #{sysUserId,jdbcType=VARCHAR}
    </if>
    <if test="schSpaceId!=null and schSpaceId!=''">
      AND wsctb.sch_space_id = #{schSpaceId,jdbcType=VARCHAR}
    </if>
    <if test="sysDepartmentId!=null and sysDepartmentId!=''">
      AND wsctb.sys_department_id = #{sysDepartmentId,jdbcType=VARCHAR}
    </if>
    <if test="schCourseCategoryId!=null and schCourseCategoryId!=''">
      AND wsctb.sch_course_category_id = #{schCourseCategoryId,jdbcType=VARCHAR}
    </if>
    <if test="currentCourseTime!=null and currentCourseTime!=''">
      AND wsctb.start_time <![CDATA[ <= ]]> #{currentCourseTime,jdbcType=VARCHAR} AND wsctb.end_time <![CDATA[ >= ]]> #{currentCourseTime,jdbcType=VARCHAR}
    </if>
    <!-- 因为含有 wss.id=#{id} 所以无法在代码层去拼接斜杠，故在xml层拼接 -->
    <if test="schSpaceParentIdsFuzzy!=null and schSpaceParentIdsFuzzy!=''">
      AND (wss.parent_ids LIKE concat('%/',#{schSpaceParentIdsFuzzy,jdbcType=VARCHAR},'/%') OR wss.id = #{schSpaceParentIdsFuzzy,jdbcType=VARCHAR})
    </if>
    <if test="sysDepParentIdsFuzzy!=null and sysDepParentIdsFuzzy!=''">
      AND (wsd.parent_ids LIKE concat('%/',#{sysDepParentIdsFuzzy,jdbcType=VARCHAR},'/%') OR wsd.id = #{sysDepParentIdsFuzzy,jdbcType=VARCHAR})
    </if>

    <if test="courseOrPersonNameLike!=null and courseOrPersonNameLike!=''">
      AND (wsu.person_name LIKE concat('%',#{courseOrPersonNameLike,jdbcType=VARCHAR},'%') or wsctb.course_name LIKE concat('%',#{courseOrPersonNameLike,jdbcType=VARCHAR},'%'))
    </if>

    GROUP BY wsctb.id
  </select>

  <!-- 后台管理的页面不需要设备拉流地址、服务器地址前缀，所以单写了 上边 foregroundListByPage -->
  <select id="queryListByPage" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Alias_Column_List" /> ,
    wsu.person_name sys_person_name,
    wsd.dep_name sys_dep_name,
    CONCAT(wss.parent_space_names,wss.space_name) sch_space_name,
    wscc.category_name sch_category_name,
    GROUP_CONCAT(wsgc.class_name) sch_class_names
    from wr_sch_course_table_base wsctb
    LEFT JOIN wr_sys_user wsu ON wsctb.sys_user_id=wsu.id
    LEFT JOIN wr_sys_department wsd ON wsctb.sys_department_id=wsd.id
    LEFT JOIN wr_sch_space wss ON wsctb.sch_space_id=wss.id
    LEFT JOIN wr_sch_course_category wscc ON wsctb.sch_course_category_id=wscc.id
    LEFT JOIN wr_sch_course_table_base_grade_class wsctbgc ON wsctb.id=wsctbgc.sch_course_table_base_id
    LEFT JOIN wr_sch_grade_class wsgc ON wsctbgc.sch_grade_class_id=wsgc.id
    where wsctb.is_delete='0'
    <if test="courseCode!=null and courseCode!=''">
      AND wsctb.course_code = #{courseCode,jdbcType=VARCHAR}
    </if>
    <if test="courseCodeLike!=null and courseCodeLike!=''">
      AND wsctb.course_code LIKE concat('%',#{courseCodeLike,jdbcType=VARCHAR},'%')
    </if>
    <if test="courseName!=null and courseName!=''">
      AND wsctb.course_name = #{courseName,jdbcType=VARCHAR}
    </if>
    <if test="courseNameLike!=null and courseNameLike!=''">
      AND wsctb.course_name LIKE concat('%',#{courseNameLike,jdbcType=VARCHAR},'%')
    </if>
    <if test="courseType!=null and courseType!=''">
      AND wsctb.course_type = #{courseType,jdbcType=CHAR}
    </if>
    <if test="sectionNumLike!=null and sectionNumLike!=''">
      AND wsctb.section_num LIKE concat('%',#{sectionNumLike,jdbcType=VARCHAR},'%')
    </if>
    <if test="week!=null and week!=''">
      AND wsctb.week = #{week,jdbcType=INTEGER}
    </if>
    <if test="weeksLike!=null and weeksLike!=''">
      AND wsctb.weeks LIKE concat('%',#{weeksLike,jdbcType=VARCHAR},'%')
    </if>
    <if test="sysUserId!=null and sysUserId!=''">
      AND wsctb.sys_user_id = #{sysUserId,jdbcType=VARCHAR}
    </if>
    <if test="schSpaceId!=null and schSpaceId!=''">
      AND wsctb.sch_space_id = #{schSpaceId,jdbcType=VARCHAR}
    </if>
    <if test="sysDepartmentId!=null and sysDepartmentId!=''">
      AND wsctb.sys_department_id = #{sysDepartmentId,jdbcType=VARCHAR}
    </if>
    <if test="currentCourseTime!=null and currentCourseTime!=''">
      AND wsctb.start_time <![CDATA[ <= ]]> #{currentCourseTime,jdbcType=VARCHAR} AND wsctb.end_time <![CDATA[ >= ]]> #{currentCourseTime,jdbcType=VARCHAR}
    </if>
    GROUP BY wsctb.id
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from wr_sch_course_table_base
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.shouzhi.pojo.db.SchCourseTableBase">
    insert into wr_sch_course_table_base (id, course_code, course_name, 
      course_type, people_num, section_num, section_num_v,
      start_time, end_time, week, week_v,
      weeks, weeks_v, is_join_live, join_live_weeks, is_joined_live_all, sys_user_id, sch_space_id,
      sch_course_category_id, sys_department_id,
      create_id, create_by, create_way, 
      create_time, remark, is_delete, 
      delete_time)
    values (#{id,jdbcType=VARCHAR}, #{courseCode,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR}, 
      #{courseType,jdbcType=CHAR}, #{peopleNum,jdbcType=INTEGER}, #{sectionNum,jdbcType=VARCHAR},  #{sectionNumV,jdbcType=VARCHAR},
    #{startTime,jdbcType=TIME}, #{endTime,jdbcType=TIME}, #{week,jdbcType=INTEGER}, #{weekV,jdbcType=VARCHAR},
      #{weeks,jdbcType=VARCHAR}, #{weeksV,jdbcType=VARCHAR}, #{isJoinLive,jdbcType=CHAR}, #{joinLiveWeeks,jdbcType=VARCHAR}, #{isJoinedLiveAll,jdbcType=CHAR}, #{sysUserId,jdbcType=VARCHAR}, #{schSpaceId,jdbcType=VARCHAR},
      #{schCourseCategoryId,jdbcType=VARCHAR}, #{sysDepartmentId,jdbcType=VARCHAR},
      #{createId,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createWay,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{isDelete,jdbcType=CHAR}, 
      #{deleteTime,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="com.shouzhi.pojo.db.SchCourseTableBase">
    insert into wr_sch_course_table_base
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="courseCode != null">
        course_code,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="courseType != null">
        course_type,
      </if>
      <if test="peopleNum != null">
        people_num,
      </if>
      <if test="sectionNum != null">
        section_num,
      </if>
      <if test="sectionNumV != null">
        section_num_v,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="week != null">
        week,
      </if>
      <if test="weekV != null">
        week_v,
      </if>
      <if test="weeks != null">
        weeks,
      </if>
      <if test="weeksV != null">
        weeks_v,
      </if>
      <if test="isJoinLive != null">
        is_join_live,
      </if>
      <if test="joinLiveWeeks != null">
        join_live_weeks,
      </if>
      <if test="isJoinedLiveAll != null">
        is_joined_live_all,
      </if>
      <if test="sysUserId != null">
        sys_user_id,
      </if>
      <if test="schSpaceId != null">
        sch_space_id,
      </if>
      <if test="schCourseCategoryId != null">
        sch_course_category_id,
      </if>
      <if test="sysDepartmentId != null">
        sys_department_id,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createWay != null">
        create_way,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="courseCode != null">
        #{courseCode,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null">
        #{courseType,jdbcType=CHAR},
      </if>
      <if test="peopleNum != null">
        #{peopleNum,jdbcType=INTEGER},
      </if>
      <if test="sectionNum != null">
        #{sectionNum,jdbcType=VARCHAR},
      </if>
      <if test="sectionNumV != null">
        #{sectionNumV,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIME},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIME},
      </if>
      <if test="week != null">
        #{week,jdbcType=INTEGER},
      </if>
      <if test="weekV != null">
        #{weekV,jdbcType=VARCHAR},
      </if>
      <if test="weeks != null">
        #{weeks,jdbcType=VARCHAR},
      </if>
      <if test="weeksV != null">
        #{weeksV,jdbcType=VARCHAR},
      </if>
      <if test="isJoinLive != null">
        #{isJoinLive,jdbcType=CHAR},
      </if>
      <if test="joinLiveWeeks != null">
        #{joinLiveWeeks,jdbcType=VARCHAR},
      </if>
      <if test="isJoinedLiveAll != null">
        #{isJoinedLiveAll,jdbcType=CHAR},
      </if>
      <if test="sysUserId != null">
        #{sysUserId,jdbcType=VARCHAR},
      </if>
      <if test="schSpaceId != null">
        #{schSpaceId,jdbcType=VARCHAR},
      </if>
      <if test="schCourseCategoryId != null">
        #{schCourseCategoryId,jdbcType=VARCHAR},
      </if>
      <if test="sysDepartmentId != null">
        #{sysDepartmentId,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createWay != null">
        #{createWay,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=CHAR},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.shouzhi.pojo.db.SchCourseTableBase">
    update wr_sch_course_table_base
    <set>
      <if test="courseCode != null">
        course_code = #{courseCode,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null">
        course_type = #{courseType,jdbcType=CHAR},
      </if>
      <if test="peopleNum != null">
        people_num = #{peopleNum,jdbcType=INTEGER},
      </if>
      <if test="sectionNum != null">
        section_num = #{sectionNum,jdbcType=VARCHAR},
      </if>
      <if test="sectionNumV != null">
        section_num_v = #{sectionNumV,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIME},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIME},
      </if>
      <if test="week != null">
        week = #{week,jdbcType=INTEGER},
      </if>
      <if test="weekV != null">
        week_v = #{weekV,jdbcType=VARCHAR},
      </if>
      <if test="weeks != null">
        weeks = #{weeks,jdbcType=VARCHAR},
      </if>
      <if test="weeksV != null">
        weeks_v = #{weeksV,jdbcType=VARCHAR},
      </if>
      <if test="isJoinLive != null">
        is_join_live = #{isJoinLive,jdbcType=CHAR},
      </if>
      <if test="joinLiveWeeks != null">
        join_live_weeks = #{joinLiveWeeks,jdbcType=VARCHAR},
      </if>
      <if test="isJoinedLiveAll != null">
        is_joined_live_all = #{isJoinedLiveAll,jdbcType=CHAR},
      </if>
      <if test="sysUserId != null">
        sys_user_id = #{sysUserId,jdbcType=VARCHAR},
      </if>
      <if test="schSpaceId != null">
        sch_space_id = #{schSpaceId,jdbcType=VARCHAR},
      </if>
      <if test="schCourseCategoryId != null">
        sch_course_category_id = #{schCourseCategoryId,jdbcType=VARCHAR},
      </if>
      <if test="sysDepartmentId != null">
        sys_department_id = #{sysDepartmentId,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createWay != null">
        create_way = #{createWay,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=CHAR},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.shouzhi.pojo.db.SchCourseTableBase">
    update wr_sch_course_table_base
    set course_code = #{courseCode,jdbcType=VARCHAR},
      course_name = #{courseName,jdbcType=VARCHAR},
      course_type = #{courseType,jdbcType=CHAR},
      people_num = #{peopleNum,jdbcType=INTEGER},
      section_num = #{sectionNum,jdbcType=VARCHAR},
    section_num_v = #{sectionNumV,jdbcType=VARCHAR},
    start_time = #{startTime,jdbcType=TIME},
      end_time = #{endTime,jdbcType=TIME},
      week = #{week,jdbcType=INTEGER},
    week_v = #{weekV,jdbcType=VARCHAR},
    weeks = #{weeks,jdbcType=VARCHAR},
    weeks_v = #{weeksV,jdbcType=VARCHAR},
    is_join_live = #{isJoinLive,jdbcType=CHAR},
    join_live_weeks = #{joinLiveWeeks,jdbcType=VARCHAR},
    is_joined_live_all = #{isJoinedLiveAll,jdbcType=CHAR},
    sys_user_id = #{sysUserId,jdbcType=VARCHAR},
      sch_space_id = #{schSpaceId,jdbcType=VARCHAR},
      sch_course_category_id = #{schCourseCategoryId,jdbcType=VARCHAR},
      sys_department_id = #{sysDepartmentId,jdbcType=VARCHAR},
      create_id = #{createId,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_way = #{createWay,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=CHAR},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>


  <!--批量更新 -->
  <update id="BatchUpdate" parameterType="java.util.Map">
    UPDATE wr_sch_course_table_base
    <set>
      <if test="isJoinLive != null">
        is_join_live = #{isJoinLive,jdbcType=CHAR},
      </if>
      <if test="joinLiveWeeks != null">
        join_live_weeks = #{joinLiveWeeks,jdbcType=VARCHAR},
      </if>
    </set>
    <where>
      <if test="idIn != null">
        id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
          #{item,jdbcType=VARCHAR}
        </foreach>
      </if>
    </where>
  </update>


  <!--批量更新 不同列，注意SQL的长度限制，可根据情况分批次执行，或也可以更新mysql的设置来扩展 -->
  <update id="BatchUpdateDiffColumn" parameterType="java.util.List">
    UPDATE wr_sch_course_table_base
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="is_join_live =case" suffix="end,">
        <foreach collection="list" item="item" index="index">
          <if test="item.isJoinLive!=null and item.isJoinLive!=''">
            when id=#{item.id} then #{item.isJoinLive}
          </if>
          <!-- 原数据 -->
          <if test="item.isJoinLive==null or item.isJoinLive==''">
            when id=#{item.id} then wr_sch_course_table_base.is_join_live
          </if>
        </foreach>
      </trim>

      <trim prefix="join_live_weeks =case" suffix="end,">
        <foreach collection="list" item="item" index="index">
          <if test="item.joinLiveWeeks!=null and item.joinLiveWeeks!=''">
            when id=#{item.id} then #{item.joinLiveWeeks}
          </if>
        </foreach>
      </trim>

      <trim prefix="is_joined_live_all =case" suffix="end,">
        <foreach collection="list" item="item" index="index">
          <if test="item.isJoinedLiveAll!=null and item.isJoinedLiveAll!=''">
            when id=#{item.id} then #{item.isJoinedLiveAll}
          </if>
          <!-- 原数据 -->
          <if test="item.isJoinedLiveAll==null or item.isJoinedLiveAll==''">
            when id=#{item.id} then wr_sch_course_table_base.is_joined_live_all
          </if>
        </foreach>
      </trim>
    </trim>
    WHERE id IN
    <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
      #{item.id,jdbcType=VARCHAR}
    </foreach>
  </update>


  <!--批量删除 此操作很危险，不允许where后携带1=1，一旦参数未传将会删除整张表数据-->
  <delete id="batchDelete" parameterType="java.util.Map" >
    delete from wr_sch_course_table_base
    where
    <if test="idIn != null">
      id IN
      <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
        #{item,jdbcType=VARCHAR}
      </foreach>
    </if>
  </delete>

  <!--批量查询 -->
  <select id="BatchSelect" parameterType="java.util.Map" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from wr_sch_course_table_base
    where
    <if test="idIn != null">
      id IN
      <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
        #{item,jdbcType=VARCHAR}
      </foreach>
    </if>
  </select>

</mapper>